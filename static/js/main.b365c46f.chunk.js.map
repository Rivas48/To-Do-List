{"version":3,"sources":["Components/Buttons.js","Components/Task.js","Components/TaskTitle.js","Components/TaskCommand.js","Components/toDoPage.js","App.js","serviceWorker.js","index.js"],"names":["Buttons","react_default","a","createElement","id","this","props","activity","onClick","click","className","Name","text","Component","Task","task","Components_Buttons","TaskTitle","TaskCommand","Comment","_this","items","map","index","Components_Task","key","deleteButton","Components_TaskTitle","deleteList","recoverList","initialArray","ToDoPage","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addToDo","e","push","state","newToDo","setState","createValue","updateToDo","target","value","field","slice","taskField","indexOf","parentNode","querySelector","innerHTML","splice","filterList","query","search","filter","el","toLowerCase","renderTask","bind","assertThisInitialized","placeholder","todo","onChange","Components_TaskCommand","App","toDoPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b365c46f.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Buttons extends Component{\n\trender(){\n\t\treturn(\n\t\t\t<button id={this.props.activity} onClick={this.props.click} className={this.props.Name}>{this.props.text}</button> \n\t\t)\n\t}\n}\n\nexport default Buttons;","import React, {Component} from 'react';\nimport Buttons from './Buttons';\n\nclass Task extends Component{\n\n\trender(){\n\t\treturn(\n\t\t\t<div className='task'>\n\t\t\t\t<li className='task-number-title'>Task {this.props.id}:</li>\n\t\t\t\t<li className=\"task-title\">{this.props.task}</li>\n\t\t\t\t<li className=\"x-task-button\"><Buttons  click={this.props.click} text=\"X\"/></li>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Task;","import React, {Component} from 'react';\n\nclass TaskTitle extends Component{\n\trender(){\n\t\t\n\t\treturn(\n\t\t\t<div className='title'>\n\t\t\t\t<li className='task-number-title'>#</li>\n\t\t\t\t<li className=\"task-title\">Task</li>\n\t\t\t\t<li className=\"x-task-button\">(X)</li>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default TaskTitle;","import React, {Component} from 'react';\nimport Buttons from './Buttons';\nimport Task from './Task';\nimport TaskTitle from './TaskTitle';\n\n\n\n\nclass TaskCommand extends Component{\n\tComment = (props) => {\n\t\treturn this.props.items.map((task,index)=>{\n\t\treturn <Task id={index+1} key={task} click={this.props.deleteButton} task={task}/>\n\t})}\nrender(props){\n\t\t\n\t\t\nreturn(\n<div className='list-container'>\n\t<ul id=\"to-do\" className='to-do-list'>\n\t<TaskTitle/>\n\t{this.Comment()}\n\t</ul>\n\t<div className=\"buttons-container\">\n\t\t<Buttons activity=\"reset\" Name=\"clear\" click={this.props.deleteList} text=\"Clear the List\"/>\n\t\t<Buttons activity=\"reset\" Name=\"reset\" click={this.props.recoverList}text=\"Reset the List\"/>\n\t</div>\n</div>\n)\n}\n}\n\nexport default TaskCommand","import React, {Component} from 'react';\nimport Buttons from './Buttons';\nimport TaskCommand from './TaskCommand';\nvar initialArray = ['Finish Redux Tutorials','Finish Cleaning Room','Finish Dishes','Finish Algorithms']\n\nclass ToDoPage extends Component{\n\n\tconstructor(props) {\n    super(props);\n    this.state = {\n    \titems:initialArray,\n        newToDo:\"\",\n    \tsearch:\"\"\n    };\n    this.addToDo = this.addToDo.bind(this);\n    this.updateToDo = this.updateToDo.bind(this);\n    this.deleteList = this.deleteList.bind(this);\n    this.recoverList = this.recoverList.bind(this);\n    this.filterList = this.filterList.bind(this);\n  }\n\n\n\n    addToDo = (e) => {   \n    initialArray.push(this.state.newToDo);\n      this.setState({\n        items: initialArray\n      })\n    }\n\n    createValue = (e) => {\n    }\n\n    updateToDo = (e) => {\n      this.setState({\n        newToDo: e.target.value\n      })  \n    }\n\n    deleteList = (e) => {\n    \tthis.setState({\n    \t\titems:[]\n    \t})\n    }\n\n    recoverList = (e) => {\n    \tthis.setState({\n    \t\titems: initialArray\n    \t})\n    }\n\n    deleteButton = (e) => {\n    \tvar field = this.state.items.slice()\n    \tvar taskField = field.indexOf(e.target.parentNode.parentNode.querySelector('.task-title').innerHTML);\n    \tif(taskField !== -1) {\n    \t\tfield.splice(taskField,1);\n    \t\tthis.setState({\n    \t\t\titems:field\n    \t\t})\n    \t}\n    }\n\n    filterList = (e,props) => {\n\t\tfunction filterItems(query) {\n\t\t  return initialArray.filter(function(el) {\n\t\t  return el.toLowerCase().indexOf(query.toLowerCase()) > -1;\n\t\t  })\n\t\t}\n\n      this.setState({\n        search: e.target.value,\n        items:\tfilterItems(e.target.value)\n      })\n    }\n    renderTask = (e) =>{\n    }\n\trender(props){\n\t\n\t\treturn(\n\t\t\t<div className='background-container'>\n\t\t\t\t<div className='title-container'>\n\t\t\t\t\t<h1>To-Do App</h1>\n\t\t\t\t\t<h5>Never Forget Any Task</h5>\n\t\t\t\t</div>\n\t\t\t\t<div className='app-container'>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div><input id='add' className='add' placeholder='Create To-Do' value={this.props.todo} onChange={this.updateToDo}/></div>\n\t\t\t\t\t\t<div><Buttons Name=\"button-add\" text=\"Enter New To-Do\" click={this.addToDo}/></div>\n\t\t\t\t\t\t<div><input id='filter' className='filter' placeholder='Filter To-Do' onChange={this.filterList}/></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<TaskCommand items={this.state.items} deleteList={this.deleteList} recoverList={this.recoverList} deleteButton={this.deleteButton} />\n\t\t\t\t</div>\n\t\t\t</div>\t\n\t\t)\n\t}\n}\n\nexport default ToDoPage;","import React, {Component} from 'react';\nimport './App.css';\nimport ToDoPage from './Components/toDoPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <ToDoPage  \n          />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}